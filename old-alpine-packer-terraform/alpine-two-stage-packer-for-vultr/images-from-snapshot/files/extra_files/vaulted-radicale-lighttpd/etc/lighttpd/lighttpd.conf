var.basedir  = "/var/www/localhost"
var.logdir   = "/var/log/lighttpd"
var.statedir = "/var/lib/lighttpd"

# At the very least, mod_access and mod_accesslog should be enabled.
# All other modules should only be loaded if necessary.
# NOTE: the order of modules is important.
server.modules = (
    "mod_redirect",
    "mod_alias",
    "mod_access",
    "mod_auth",
    "mod_setenv",
    "mod_proxy",
    "mod_deflate",
    "mod_expire",
    "mod_accesslog"
)

# {{{ includes
include "mime-types.conf"
# uncomment for cgi support
#   include "mod_cgi.conf"
# uncomment for php/fastcgi support
#   include "mod_fastcgi.conf"
# uncomment for php/fastcgi fpm support
#   include "mod_fastcgi_fpm.conf"
# }}}

server.username = "lighttpd"
server.groupname = "lighttpd"
server.document-root = var.basedir + "/htdocs"
server.upload-dirs  = ( "/var/cache/lighttpd/uploads" )
server.errorlog  = var.logdir  + "/error.log"
server.pid-file = "/run/lighttpd.pid"
server.port = 80

# log errors to syslog instead
server.errorlog-use-syslog = "enable"
server.indexfiles = (index.html")

server.follow-symlink = "enable"
server.event-handler = "linux-sysepoll"

# error-handler for status 404
# server.error-handler-404 = "/error-handler.html"
# server.error-handler-404 = "/error-handler.php"

# Format: <errorfile-prefix><status-code>.html
# -> ..../status-404.html for 'File not found'
# server.errorfile-prefix    = var.basedir + "/error/status-"

accesslog.filename   = var.logdir + "/access.log"

# {{{ mod_access
url.access-deny = ("~", ".inc")

# {{{ mod_ssl
# see ssl.txt
#
# ssl.engine    = "enable"
# ssl.pemfile   = "server.pem"
# }}}

# {{{ mod_deflate

deflate.cache-dir   = var.statedir + "/cache/compress"
deflate.mimetypes   = ("text/plain", "text/html")

# {{{ mod_proxy

$HTTP["url"] =~ "^/radicale/" {
    proxy.server = (
        "/radicale/" =>
            ( "radicale" =>
                (
                    "host" => "localhost",
                    "port" => 5232
                )
            )
        )

    proxy.forwarded = (
            "for" => 1,
            "proto" => 1,
            "host" => 1,
            "remote_user" => 1
        )

    proxy.header = (
            "map-urlpath" => (
                "/radicale/" => "/"
            )
        )

    setenv.add-request-header = (
        "X-Script_Name" => "/radicale",
        "Script-Name" => "/radicale"
    )
}

# {{{ mod_auth
auth.backend               = "htpasswd"
auth.backend.htpasswd.userfile = "/etc/lighttpd/users"

auth.require               = ( "/radicale" =>
                               (
                                 "method"  => "basic",
                                 "realm"   => "Radicale - Password Required",
                                 "require" => "valid-user"
                               ),
                             )
# }}}

# {{{ mod_redirect
# see redirect.txt
#
# url.redirect = (
#	"^/wishlist/(.+)"		=>		"http://www.123.org/$1"
# )
# }}}

# {{{ extra rules
#
# set Content-Encoding and reset Content-Type for browsers that
# support decompressing on-thy-fly (requires mod_setenv)
$HTTP["url"] =~ "\.gz$" {
     setenv.add-response-header = ("Content-Encoding" => "x-gzip")
     mimetype.assign = (".gz" => "text/plain")
}

$HTTP["url"] =~ "\.bz2$" {
     setenv.add-response-header = ("Content-Encoding" => "x-bzip2")
     mimetype.assign = (".bz2" => "text/plain")
}

# {{{ debug
# debug.log-request-header   = "enable"
# debug.log-response-header  = "enable"
# debug.log-request-handling = "enable"
# debug.log-file-not-found   = "enable"
# }}}

# vim: set ft=conf foldmethod=marker et :

